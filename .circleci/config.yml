version: 2.1
orbs:
  cloudfoundry: circleci/cloudfoundry@0.1.12
  slack:        circleci/slack@0.1.0
  saucelabs:    saucelabs/sauce-connect@1.0.1
  maven:        circleci/maven@dev:eddie

executors:
  my-excutor:
    docker:
      - image: circleci/openjdk@8


workflows:
  version: 2
  build_deploy:
    jobs:
      - maven/test:
          name: "Unit Test"
          executor: my-excutor
          command: "test -B"
          parallelism: 2
          parallel: true
          post-steps:
            - run:
                name: Collect Code Cov
                command: |
                  curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                  chmod +x ./cc-test-reporter
                  ./mvnw jacoco:report #convert binary jacoco.exec to XML in target/site/jacoco
                  export JACOCO_SOURCE_PATH="src/main/java"
                  ./cc-test-reporter format-coverage -t jacoco  target/site/jacoco/jacoco.xml -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
            - persist_to_workspace:
                root: coverage
                paths:
                  - codeclimate.*.json

      - sum-coverage:
          requires:
            - "Unit Test"
      - saucelabs/with_proxy:
          name: "Chrome Tests"
          requires:
            - "Unit Test"
          tunnel_identifier: chrome
          steps:
            - maven/with_cache:
                steps:
                  - run: ./mvnw verify -B -Dspring.profiles.active=it -Dsauce.tunnel="chrome" 

      - saucelabs/with_proxy:
          name: "IE Tests"
          requires:
            - "Unit Test"
          tunnel_identifier: ie
          steps:
            - maven/with_cache:
                steps:
                  - run: ./mvnw verify -B -Dspring.profiles.active=it -Dsauce.version=11.103 -Dsauce.tunnel="ie" -Dsauce.browser="internet explorer" 
     
      - maven/test:
          name: "Static Analysis"
          command: 'clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar 
                     -Dsonar.host.url=https://sonarcloud.io 
                     -Dsonar.organization=circleci-demo 
                     -Dsonar.login=${SONAR_KEY} 
                     -Dsonar.branch.name=${CIRCLE_BRANCH}'
          requires:
            - "Unit Test"

      - package-jar:
          requires:
            - "Unit Test"
          filters:
            branches:
              only: master

      - cloudfoundry/dark_deploy:
          requires:
            - package-jar
          filters:
            branches:
              only: master
          context: Demos-Context
          appname: blueskygreenbuilds
          org: eddies-org
          space: circleci
          workspace_path: /tmp
          manifest: /tmp/cf-manifest.yml
          package: /tmp/standalone-app.jar
          domain: blueskygreenbuilds.com
          validate_steps:
            - slack/notify:
                message: "The latest inventory is ready to ship, please review/approve ASAP! https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
                mentions: UA8FDUL8P

      - hold:
          type: approval
          requires:
            - cloudfoundry/dark_deploy
            - "IE Tests"
            - "Chrome Tests"
          filters:
            branches:
              only: master
              
      - cloudfoundry/live_deploy:
          requires:
            - hold
          filters:
            branches:
              only: master
          context: Demos-Context
          appname: blueskygreenbuilds
          org: eddies-org
          space: circleci
          domain: blueskygreenbuilds.com


jobs:
  sum-coverage:
    docker:
      - image: circleci/node:10
        environment:
          PARTS: 2
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: coverage
      - run:
          name: Aggregate Code Coverage
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter sum-coverage --output - --parts $PARTS coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -
     

  package-jar:
    docker:
      - image: circleci/openjdk@sha256:76e4d88773f25ac52c3f0c63bf63b8e346ce799fbfe3691566f03d987795c70f
    working_directory: ~/repo
    steps:
      - checkout
      - maven/with_cache:
          steps: 
            - run: mvn package -B -DskipTests=true
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp target/blueskygreenbuilds-*.jar /tmp/standalone-app.jar
            cp src/main/resources/deployment/cf-manifest.yml /tmp/
      - store_artifacts:
          path: /tmp/standalone-app.jar
      - store_artifacts:
          path: /tmp/cf-manifest.yml
      - persist_to_workspace:
          root: /tmp
          paths:
            - standalone-app.jar
            - cf-manifest.yml
