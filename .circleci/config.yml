version: 2.1
orbs:
  cloudfoundry: circleci/cloudfoundry@0.1.12
  slack:        circleci/slack@0.1.0
  artifacts:    eddiewebb/artifacts@volatile

workflows:
  version: 2
  build_deploy:
    jobs:
      - unit-test
      - test-chrome:
          requires:
            - unit-test
      - test-ie:
          requires:
            - unit-test
      - static_code_analysis:
          requires:
            - unit-test
      - package-jar:
          requires:
            - unit-test
          filters:
            branches:
              only: master
      - cloudfoundry/dark_deploy:
          requires:
            - package-jar
          filters:
            branches:
              only: master
          context: Demos-Context
          appname: blueskygreenbuilds
          org: eddies-org
          space: circleci
          workspace_path: /tmp
          manifest: /tmp/cf-manifest.yml
          package: /tmp/standalone-app.jar
          domain: blueskygreenbuilds.com
          validate_steps:
            - slack/notify:
                message: "The latest inventory is ready to ship, please review/approve ASAP! https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
                mentions: UA8FDUL8P
      - hold:
          type: approval
          requires:
            - cloudfoundry/dark_deploy
            - test-ie
            - test-chrome
          filters:
            branches:
              only: master
      - cloudfoundry/live_deploy:
          requires:
            - hold
          filters:
            branches:
              only: master
          context: Demos-Context
          appname: blueskygreenbuilds
          org: eddies-org
          space: circleci
          domain: blueskygreenbuilds.com


jobs:
  unit-test:
    resource_class: small
    docker:
      - image: circleci/openjdk@sha256:76e4d88773f25ac52c3f0c63bf63b8e346ce799fbfe3691566f03d987795c70f
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}
            - blueskygreenbuilds-mvn-V2

      - run: mvn --batch-mode dependency:go-offline 
      - run:
          name: Build and *unit* test
          command: |
            ./mvnw surefire-report:report -B  #run your tests
            ./mvnw site -DgenerateReports=false

      - save_cache:
          paths:
            - ~/.m2
          key: blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}

      - store_test_results:
          path: target/surefire-reports
      - artifacts/with_summary:
          parent_folder: target
          file_pattern: "*.html"


  test-chrome:
    resource_class: large
    docker:
      - image: circleci/openjdk@sha256:76e4d88773f25ac52c3f0c63bf63b8e346ce799fbfe3691566f03d987795c70f
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}
            - blueskygreenbuilds-mvn-V2

      - run: mvn dependency:go-offline

      - run:
          name: Start SauceLabs Tunnel (required if testing on CircleCI container)
          command: |
            : ${SAUCELABS_USER:?"Required Env Variable not found!"}
            : ${SAUCELABS_KEY:?"Required Env Variable not found!"}
            curl https://saucelabs.com/downloads/sc-4.4.12-linux.tar.gz -o saucelabs.tar.gz
            tar -xzf saucelabs.tar.gz
            cd sc-*
            # startup saucelabs tunnel as background task (its a blocking command)
            bin/sc -u ${SAUCELABS_USER} -k ${SAUCELABS_KEY} -i chrome &
            #wait for sauce tunnel up to 1 minute
            wget --retry-connrefused --no-check-certificate -T 60 localhost:4445

      - run:
          name: Build and Integration test
          command: |
            mvn verify -B -Dspring.profiles.active=it -Dsauce.browser=chrome  -Dsauce.tunnel="chrome" #package and run your browser tests
            killall sc #kill saucelabs tunnel
      - save_cache:
          paths:
           - ~/.m2
          key: blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}


  test-ie:
    resource_class: large
    docker:
      - image: circleci/openjdk@sha256:76e4d88773f25ac52c3f0c63bf63b8e346ce799fbfe3691566f03d987795c70f
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}
            - blueskygreenbuilds-mvn-V2

      - run: mvn dependency:go-offline

      - run:
          name: Start SauceLabs Tunnel (required if testing on CircleCI container)
          command: |
            : ${SAUCELABS_USER:?"Required Env Variable not found!"}
            : ${SAUCELABS_KEY:?"Required Env Variable not found!"}
            curl https://saucelabs.com/downloads/sc-4.4.12-linux.tar.gz -o saucelabs.tar.gz
            tar -xzf saucelabs.tar.gz
            cd sc-*
            # startup saucelabs tunnel as background task (its a blocking command)
            bin/sc -u ${SAUCELABS_USER} -k ${SAUCELABS_KEY} -i ie &
            #wait for sauce tunnel up to 1 minute
            wget --retry-connrefused --no-check-certificate -T 60 localhost:4445

      - run:
          name: Build and Integration test
          command: |
            mvn verify -B -Dspring.profiles.active=it -Dsauce.version=11.103 -Dsauce.tunnel="ie" -Dsauce.browser="internet explorer" #package and run your browser tests
            killall sc #kill saucelabs tunnel


      - save_cache:
          paths:
           - ~/.m2
          key: blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}

  static_code_analysis:
    resource_class: xlarge
    docker:
      - image: circleci/openjdk@sha256:76e4d88773f25ac52c3f0c63bf63b8e346ce799fbfe3691566f03d987795c70f
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}
            - blueskygreenbuilds-sonar-mvn-{{ checksum "pom.xml" }}
      - restore_cache:
          key: blueskygreenbuilds-sonar
      - run:
          name: Static Code Analysis (SonarQube)
          command: |
            mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar \
                 -Dsonar.host.url=https://sonarcloud.io \
                 -Dsonar.organization=circleci-demo \
                 -Dsonar.login=${SONAR_KEY} \
                 -Dsonar.branch.name=${CIRCLE_BRANCH}
      - save_cache:
          paths:
           - ~/.sonar/cache
          key: blueskygreenbuilds-sonar
      - save_cache:
          paths:
           - ~/.m2
          key: blueskygreenbuilds-sonar-mvn-{{ checksum "pom.xml" }}




  package-jar:
    docker:
      - image: circleci/openjdk@sha256:76e4d88773f25ac52c3f0c63bf63b8e346ce799fbfe3691566f03d987795c70f
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}
            - blueskygreenbuilds-mvn-V2
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
           - ~/.m2
          key: blueskygreenbuilds-mvn-V2-{{ checksum "pom.xml" }}
      - run:
          name: Package Jar
          command: |
            mvn package -B -DskipTests=true
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp target/blueskygreenbuilds-*.jar /tmp/standalone-app.jar
            cp src/main/resources/deployment/cf-manifest.yml /tmp/
      - store_artifacts:
          path: /tmp/standalone-app.jar
      - store_artifacts:
          path: /tmp/cf-manifest.yml
      - persist_to_workspace:
          root: /tmp
          paths:
            - standalone-app.jar
            - cf-manifest.yml
